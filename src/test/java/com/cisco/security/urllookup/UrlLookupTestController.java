package com.cisco.security.urllookup;

import static org.assertj.core.api.Assertions.assertThat;

import java.nio.charset.Charset;
import java.util.HashMap;

import org.apache.commons.codec.binary.Base64;
import org.junit.jupiter.api.Test;
import org.mockito.Mock;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.test.autoconfigure.web.servlet.WebMvcTest;
import org.springframework.boot.test.context.SpringBootTest;
import org.springframework.boot.test.mock.mockito.MockBean;
import org.springframework.boot.test.web.client.TestRestTemplate;
import org.springframework.http.HttpEntity;
import org.springframework.http.HttpHeaders;
import org.springframework.http.HttpMethod;
import org.springframework.http.ResponseEntity;
import org.springframework.test.web.servlet.MockMvc;

import com.cisco.security.urllookup.controllers.URLLookupController;


@SpringBootTest
@WebMvcTest(URLLookupController.class)
public class UrlLookupTestController {
	
	@Autowired
	MockMvc mockmvc;
	
	@MockBean
	private URLLookupController urlController;
	
	@Autowired
	@Mock
	private TestRestTemplate restTemplate;
	
	
	HttpHeaders createHeaders(String username, String password){
		   return new HttpHeaders() {{
		         String auth = username + ":" + password;
		         byte[] encodedAuth = Base64.encodeBase64( 
		            auth.getBytes(Charset.forName("US-ASCII")) );
		         String authHeader = "Basic " + new String( encodedAuth );
		         set( "Authorization", authHeader );
		      }};
	}

	@SuppressWarnings({ "unchecked", "rawtypes" })
	@Test
	public void responseNotNull() throws Exception {
		
		
		ResponseEntity<HashMap> map =  restTemplate.exchange("http://localhost:" + 9090 + 
					"/rest/api/get/www.google.com", HttpMethod.GET, 
					new HttpEntity<>(createHeaders("subhro", "abcd")), HashMap.class);
		
		/*HashMap<String, Object> map = this.restTemplate.getForObject("http://localhost:" + 9090 + 
				"/rest/api/get/www.google.com",
				HashMap.class);*/
		
		assertThat(map.getBody()).isNotNull();
	}
	
	@SuppressWarnings({ "unchecked", "rawtypes" })
	@Test
	public void responseIsMalwareUrl() throws Exception {
		
		ResponseEntity<HashMap> map =  restTemplate.exchange("http://localhost:" + 9090 + 
				"/rest/api/get/www.google.com", HttpMethod.GET, 
				new HttpEntity<>(createHeaders("subhro", "abcd")), HashMap.class);
		
		assertThat(map.getBody().get("status").toString()).isEqualTo("Success");
	}
	
	@SuppressWarnings({ "unchecked", "rawtypes" })
	@Test
	public void responseAddNotNull() throws Exception {
		
		
		ResponseEntity<HashMap> map =  restTemplate.exchange("http://localhost:" + 9091 + 
					"/rest/api/add?url=www.google.com/898797", HttpMethod.GET, 
					new HttpEntity<>(createHeaders("subhro", "abcd")), HashMap.class);
		
		assertThat(map.getBody()).isNotNull();
	}
	
	@SuppressWarnings({ "unchecked", "rawtypes" })
	@Test
	public void responseAddMalwareUrl() throws Exception {
		
		ResponseEntity<HashMap> map =  restTemplate.exchange("http://localhost:" + 9091 + 
				"/rest/api/add?url=www.google.com/teye", HttpMethod.GET, 
				new HttpEntity<>(createHeaders("admin", "admin")), HashMap.class);
		
		assertThat(map.getBody().get("status").toString()).isEqualTo("Success");
	}
}

