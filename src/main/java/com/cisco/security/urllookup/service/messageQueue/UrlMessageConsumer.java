package com.cisco.security.urllookup.service.messageQueue;

import java.util.HashMap;
import java.util.Map;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.amqp.rabbit.annotation.RabbitListener;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.cisco.security.urllookup.common.Constants;
import com.cisco.security.urllookup.model.URLDetails;
import com.cisco.security.urllookup.service.UrlLookupService;

@Service
public class UrlMessageConsumer {

	protected Logger logger = LoggerFactory.getLogger(UrlMessageSender.class);

	

	@Autowired
	UrlLookupService urlService;

	@Autowired
	UrlMessageSender urlMessageSender;

	@RabbitListener(queues = Constants.QUEUE_NAME)
	public void receiveMessage(final URLDetails detailsObj) {
		if (null != detailsObj) {
			logger.info("Consumer Received message : {}", detailsObj.toString());
			try {
				urlService.addMalwareURL(detailsObj.getFullUrl(), detailsObj.isSafe());
				logger.info("Receive Queue : Updated Malware URI in db", detailsObj.getFullUrl());
			} catch (Exception e) {
				if (null != detailsObj) {
					logger.error("Receive Queue : Failed Update Malware URI in db. Adding back to Queue",
							detailsObj.getFullUrl());
					urlMessageSender.sendMessage(detailsObj);
				}
			}
		}
	}

	
	  @RabbitListener(queues = Constants.QUEUE_ADD_NAME) 
	  public Map<String, Object> receiveGetMessage(final URLDetails detailsObj) {
		Map<String, Object> response = new HashMap<>();
		if (null != detailsObj && null != detailsObj) {
			logger.info("Consumer Received message2 : {}", detailsObj.toString());
			try {
				response = urlService.checkUrlValidity(detailsObj.getFullUrl());
				if(response.get("Status").toString().equalsIgnoreCase("Success")){
					logger.info(detailsObj.getFullUrl() + " is Safe : {}" ,
							((boolean) response.get("isSafeURI") ? "Yes" : "No"));
				}
			} catch (Exception e) {
				logger.error("Failed while getting details for Url " + detailsObj, e);
			}
		}
		return response;
	}
	 
}
