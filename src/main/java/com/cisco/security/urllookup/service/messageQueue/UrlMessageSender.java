package com.cisco.security.urllookup.service.messageQueue;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.amqp.rabbit.core.RabbitTemplate;
import org.springframework.scheduling.annotation.Scheduled;
import org.springframework.stereotype.Service;

import com.cisco.security.urllookup.common.Constants;
import com.cisco.security.urllookup.model.URLDetails;

@Service
public class UrlMessageSender {

	protected Logger logger = LoggerFactory.getLogger(UrlMessageSender.class);

	private final RabbitTemplate rabbitTemplate;

	public UrlMessageSender(final RabbitTemplate rabbitTemplate) {
		this.rabbitTemplate = rabbitTemplate;
	}

	@Scheduled(fixedDelay = 5000L)
	public void sendMessage() {
		final String messageUrl = "www.pinky.com/" + System.currentTimeMillis();
		URLDetails detailsObject = new URLDetails();
		detailsObject.setFullUrl(messageUrl);
		detailsObject.setSafe(false);
		logger.info("Adding URL to message Queue...");
		rabbitTemplate.convertAndSend(Constants.EXCHANGE_NAME, Constants.QUEUE_NAME, detailsObject);
	}

	public void sendMessage(URLDetails detailsObject) {
		logger.info("Adding URL to message Queue..." + detailsObject.getFullUrl());
		rabbitTemplate.convertAndSend(Constants.EXCHANGE_NAME, Constants.QUEUE_NAME, detailsObject);
	}

	@Scheduled(fixedDelay = 12000L)
	public void sendMessageRemove() {
		logger.info("Adding Safe URL to message Queue...");
		final String messageUrl = "www.hanky.com/" + System.currentTimeMillis();
		URLDetails detailsObject = new URLDetails();
		detailsObject.setFullUrl(messageUrl);
		detailsObject.setSafe(true);
		rabbitTemplate.convertAndSend(Constants.EXCHANGE_NAME, Constants.QUEUE_NAME, detailsObject);
	}

	
	@Scheduled(fixedDelay = 2000L)
	public void sendMessageForReceive() {
		logger.info("Getting  URL details to message Queue...");
		final String messageUrl = "www.google.com/" + System.currentTimeMillis();
		URLDetails detailsObject = new URLDetails();
		detailsObject.setFullUrl(messageUrl);
		//detailsObject.setSafe(true);
		rabbitTemplate.convertAndSend(Constants.EXCHANGE_NAME, Constants.QUEUE_ADD_NAME, detailsObject);
	}
	 
	public void sendMessageForQueue(String url) {
		logger.info("Getting  URL details through message Queue...");
		URLDetails detailsObject = new URLDetails();
		detailsObject.setFullUrl(url);
		rabbitTemplate.convertAndSend(Constants.EXCHANGE_NAME, Constants.QUEUE_ADD_NAME, detailsObject);
	}

}
