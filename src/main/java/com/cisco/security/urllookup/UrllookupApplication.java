package com.cisco.security.urllookup;

import org.apache.commons.codec.digest.DigestUtils;
import org.springframework.amqp.core.Binding;
import org.springframework.amqp.core.BindingBuilder;
import org.springframework.amqp.core.Queue;
import org.springframework.amqp.core.TopicExchange;
import org.springframework.amqp.rabbit.connection.ConnectionFactory;
import org.springframework.amqp.rabbit.core.RabbitTemplate;
import org.springframework.amqp.support.converter.Jackson2JsonMessageConverter;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.CommandLineRunner;
import org.springframework.boot.SpringApplication;
import org.springframework.boot.autoconfigure.EnableAutoConfiguration;
import org.springframework.boot.autoconfigure.SpringBootApplication;
import org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration;
import org.springframework.context.annotation.Bean;
import org.springframework.scheduling.annotation.EnableScheduling;

import com.cisco.security.urllookup.common.Constants;
import com.cisco.security.urllookup.dao.UrlDao;
import com.cisco.security.urllookup.dao.UserDao;
import com.cisco.security.urllookup.model.URLDetails;
import com.cisco.security.urllookup.model.User;

@SpringBootApplication
@EnableAutoConfiguration(exclude = { DataSourceAutoConfiguration.class })
@EnableScheduling
public class UrllookupApplication {

	@Autowired
	UserDao userDao;

	@Autowired
	UrlDao urlDao;

	
	public static void main(String[] args) {
		SpringApplication.run(UrllookupApplication.class, args);
	}

	@Bean
	public CommandLineRunner demoUser(UserDao userDao) {
		return (args) -> {
			User user1 = new User("admin", DigestUtils.md5Hex("admin"));
			user1.setRole("Admin");

			User user2 = new User("subhro", DigestUtils.md5Hex("abcd"));
			user2.setRole("User");

			userDao.save(user1);
			userDao.save(user2);
		};
	}

	@Bean
	public CommandLineRunner demoUrls(UrlDao urlDao) {
		return (args) -> {
			URLDetails user1 = new URLDetails();
			user1.setFullUrl("www.google.com");
			user1.setId(DigestUtils.md5Hex("www.google.com"));
			user1.setSafe(true);

			URLDetails user2 = new URLDetails();
			user2.setFullUrl("www.abcd.com");
			user2.setId(DigestUtils.md5Hex("www.abcd.com"));
			user2.setSafe(false);

			URLDetails user3 = new URLDetails();
			user3.setId(DigestUtils.md5Hex("www.pqr.com"));
			user3.setFullUrl("www.pqr.com");
			user3.setSafe(false);

			urlDao.save(user1);
			urlDao.save(user3);
			urlDao.save(user2);
		};
	}

	@Bean
	public TopicExchange appExchange() {
		return new TopicExchange(Constants.EXCHANGE_NAME);
	}

	@Bean
	public TopicExchange appGetExchange() {
		return new TopicExchange(Constants.EXCHANGE_NAME);
	}

	@Bean
	public Queue appQueueForGetUrls() {
		return new Queue(Constants.QUEUE_NAME);
	}

	@Bean
	public Queue appQueueForAddUrls() {
		return new Queue(Constants.QUEUE_ADD_NAME);
	}

	@Bean
	public Binding declareBindingQueue() {
		return BindingBuilder.bind(appQueueForGetUrls()).to(appGetExchange()).with(Constants.ROUTING_KEY);
	}

	@Bean
	public Binding declareBindingAddQueue() {
		return BindingBuilder.bind(appQueueForAddUrls()).to(appExchange()).with(Constants.ROUTING_KEY);
	}

	@Bean
	public RabbitTemplate rabbitTemplate(final ConnectionFactory connectionFactory) {
		final RabbitTemplate rabbitTemplate = new RabbitTemplate(connectionFactory);
		rabbitTemplate.setMessageConverter(producerJackson2MessageConverter());
		return rabbitTemplate;
	}

	@Bean
	public Jackson2JsonMessageConverter producerJackson2MessageConverter() {
		return new Jackson2JsonMessageConverter();
	}
}
